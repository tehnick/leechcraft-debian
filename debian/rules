#!/usr/bin/make -f

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

ifeq (,$(NUMJOBS))
	NUMJOBS = 1
endif

DEB_BUILDDIR = "builddir"
DEB_SRCDIR = "src"
DEB_DH_INSTALL_SOURCEDIR = "$(CURDIR)/debian/tmp"

PACKAGE = leechcraft
DEVELOPER = 0xd34df00d
PROJECT = leechcraft

CUR_VER = $(shell dpkg-parsechangelog | sed -ne 's/^Version: \(\([0-9]\+\):\)\?\(.*\)-.*/\3/p')

CMAKEOPTS = "$(CURDIR)/$(DEB_SRCDIR)" \
	-DCMAKE_INSTALL_PREFIX=/usr \
	-DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo \
	-DGCC_GENERATES_MOVE_CTORS_FOR_STRUCTS_WITH_BITFIELDS=True \
	-DLEECHCRAFT_VERSION="$(CUR_VER)" \
	-DDISABLE_RPATH_TRICKS=True \
	-DSTRICT_LICENSING=True \
	-DLOCAL_MINIUPNP=True \
	-DTEST=False \
	-DENABLE_ADVANCEDNOTIFICATIONS=True \
	-DENABLE_AZOTH=True \
	-DENABLE_QTMULTIMEDIA_KLUDGE=True \
	-DENABLE_MEDIACALLS=False \
	-DENABLE_AZOTH_ASTRALITY=True \
	-DENABLE_AZOTH_OTROID=True \
	-DENABLE_AZOTH_VADER=True \
	-DENABLE_AZOTH_ZHEET=True \
	-DENABLE_EISKALTDCPP=True \
	-DENABLE_GLANCE=True \
	-DENABLE_GMAILNOTIFIER=True \
	-DENABLE_LACKMAN=True \
	-DENABLE_LHTR=True \
	-DENABLE_LIZNOO=True \
	-DENABLE_NETSTOREMANAGER=True \
	-DENABLE_PINTAB=True \
	-DENABLE_POPISHU=True \
	-DENABLE_SECMAN=True \
	-DENABLE_SHELLOPEN=True \
	-DENABLE_SIDEBAR=True \
	-DENABLE_TABSESSMANAGER=True \
	-DENABLE_TABSLIST=True \
	-DENABLE_KNOWHOW=False \
	-DENABLE_QROSP=False \
	-DENABLE_SYNCER=False \
	-DENABLE_BLACKDASH=False \
	-DENABLE_CHOROID=False \
	-DENABLE_VFSCORE=False \
	-DENABLE_SNAILS=False \
	-DENABLE_FTP=False \
	-DENABLE_TABPP=False


configure: configure-stamp
configure-stamp:
	dh_testdir
	mkdir -p $(DEB_BUILDDIR)
	cd $(DEB_BUILDDIR) && cmake $(CMAKEOPTS)
	touch $@
build: configure build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp:
	dh_testdir
	cd $(DEB_BUILDDIR) && $(MAKE) -j$(NUMJOBS)
	touch $@
clean: do-clean
do-clean:
	dh_testdir
	dh_testroot
	rm -f src/data/leechcraft.1.gz
	[ ! -f Makefile ] || ( cd $(DEB_BUILDDIR) && $(MAKE) clean )
	test ! -d $(DEB_BUILDDIR) || rm -r $(DEB_BUILDDIR)
	dh_clean
install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	cd $(DEB_BUILDDIR) && $(MAKE) install DESTDIR=$(DEB_DH_INSTALL_SOURCEDIR)
get-orig-source:
	# preparation
	rm -rf  "$(CUR_VER)"/ "$(PACKAGE)-$(CUR_VER)"/
	# main sources
	wget -4 "http://nodeload.github.com/$(DEVELOPER)/$(PROJECT)/tarball/$(CUR_VER)"
	rm -rf $(DEVELOPER)-$(PROJECT)-*
	tar xzf "$(CUR_VER)"
	mv $(DEVELOPER)-$(PROJECT)-* "$(PACKAGE)-$(CUR_VER)"
	# processing
	rm -rf "$(PACKAGE)-$(CUR_VER)"/src/plugins/lcftp/
	rm -rf "$(PACKAGE)-$(CUR_VER)"/src/plugins/cstp/resources/images/clients/*
	rm -rf "$(PACKAGE)-$(CUR_VER)"/src/plugins/advancednotifications/share/sounds/*
	mv "$(PACKAGE)-$(CUR_VER)"/src/plugins/azoth/share/azoth/iconsets/clients/default/unknown.png \
	   "$(PACKAGE)-$(CUR_VER)"/src/plugins/azoth/share/azoth/iconsets/clients/unknown.png
	rm -f "$(PACKAGE)-$(CUR_VER)"/src/plugins/azoth/share/azoth/iconsets/clients/default/*
	mv "$(PACKAGE)-$(CUR_VER)"/src/plugins/azoth/share/azoth/iconsets/clients/unknown.png \
	   "$(PACKAGE)-$(CUR_VER)"/src/plugins/azoth/share/azoth/iconsets/clients/default/unknown.png
	# tarball
	tar -cJf "$(PACKAGE)_$(CUR_VER).orig.tar.xz" "$(PACKAGE)-$(CUR_VER)"
	# cleaning
	rm -rf "$(PACKAGE)-$(CUR_VER)" "$(CUR_VER)" "master"
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_install -i
	dh_installdocs -i
	dh_installchangelogs -i CHANGELOG
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_installdebconf -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_install -a
	dh_installchangelogs -a CHANGELOG
	dh_installdocs -a
	dh_installman -a
	dh_link -a
	dh_strip --dbg-package=leechcraft-dbg
	dh_lintian -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -V -plibleechcraft-xmlsettingsdialog0.3.0 \
					 -plibleechcraft-util0.5.0
	dh_installdeb -a
	dh_shlibdeps -a -ldebian/libleechcraft-xmlsettingsdialog0.3.0/usr/lib \
					-ldebian/libleechcraft-util0.5.0/usr/lib
	dh_installdebconf -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a
binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure patch unpatch do-clean
